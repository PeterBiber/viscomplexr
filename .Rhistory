xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2), pType = "pma",
invertFlip = TRUE,  axes = FALSE, yaxs = "i", xaxs = "i",
main = latex2exp::TeX("$\\vartheta_1(z, \\tau = \\frac{3i-7}{10})$
Northern Riemann Hemisphere"),
col.main = "white", res = res)
riemannMask()
par(op)
x11(width = 16, height = 8); res <- 150
# res <- 300; png("jacobiThetaNoSo.png", 40, 20, units = "cm", res = res)
op <- par(mfrow = c(1, 2), bg = "black", fg = "white", mar = c(3, 3, 3, 3))
phasePortrait(jacobiTheta4, moreArgs = list(nIter = 30, tau = 1i/2-1/4),
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2), pType = "pma",
invertFlip = FALSE, axes = FALSE, yaxs = "i", xaxs = "i",
main = latex2exp::TeX("$\\vartheta_1(z, \\tau = \\frac{3i-7}{10})$
Southern Riemann Hemisphere"),
col.main = "white", res = res)
riemannMask()
phasePortrait(jacobiTheta4, moreArgs = list(nIter = 30, tau = 1i/2-1/4),
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2), pType = "pma",
invertFlip = TRUE,  axes = FALSE, yaxs = "i", xaxs = "i",
main = latex2exp::TeX("$\\vartheta_1(z, \\tau = \\frac{3i-7}{10})$
Northern Riemann Hemisphere"),
col.main = "white", res = res)
riemannMask()
par(op)
x11(width = 16, height = 8); res <- 150
# res <- 300; png("jacobiThetaNoSo.png", 40, 20, units = "cm", res = res)
op <- par(mfrow = c(1, 2), bg = "black", fg = "white", mar = c(3, 3, 3, 3))
phasePortrait(jacobiTheta4, moreArgs = list(nIter = 30, tau = 3i/10-7/10),
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2), pType = "pma",
invertFlip = FALSE, axes = FALSE, yaxs = "i", xaxs = "i",
main = latex2exp::TeX("$\\vartheta_1(z, \\tau = \\frac{3i-7}{10})$
Southern Riemann Hemisphere"),
col.main = "white", res = res)
riemannMask()
phasePortrait(jacobiTheta4, moreArgs = list(nIter = 30, tau = 3i/10-7/10),
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2), pType = "pma",
invertFlip = TRUE,  axes = FALSE, yaxs = "i", xaxs = "i",
main = latex2exp::TeX("$\\vartheta_1(z, \\tau = \\frac{3i-7}{10})$
Northern Riemann Hemisphere"),
col.main = "white", res = res)
riemannMask()
par(op)
devtools::load_all(".")
phasePortrait("0", xlim = c(-1, 1), ylim = c(-1, 1))
phasePortrait("0", xlim = c(-1, 1), ylim = c(-1, 1), darkestShade = 0)
?context
?context
use_build_ignore("CreateTestCases")
usethis::use_build_ignore("CreateTestCases")
library(viscomplexr)
ee
e
library(viscomplexr)
x11(width = 8, height = 8)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4))
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = TRUE)
x11(width = 8, height = 8)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = TRUE)
x11(width = 8, height = 8)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = TRUE)
riemannMask()
x11(width = 8, height = 8)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = FALSE)
riemannMask()
?phasePortrait
tempDir <- "tests/testthat"
x11(width = 3, height = 3)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = FALSE,
tempDir = tempDir) #, deleteTempFiles = FALSE)
x11(width = 4, height = 4)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = FALSE,
tempDir = tempDir) #, deleteTempFiles = FALSE)
tempDir <- "tests/testthat"
x11(width = 4, height = 4)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE)
dev.off()
?unlink
?dir
dir(pattern = "^.RData$")
dir("test/testthat", pattern = "^.RData$")
dir("tests/testthat", pattern = "^.RData$")
dir("tests/testthat")
?dir
dir("tests/testthat", pattern = "^[.RData$]")
dir("tests/testthat", pattern = "^.RData$")
dir("tests/testthat", pattern = "^\.RData$")
dir("tests/testthat", pattern = "^*\.RData$")
dir("tests/testthat", pattern = "^\*.RData$")
dir("tests/testthat", pattern = "\\.RData$")
existRData         <- dir("tests/testthat", pattern = "\\.RData$")
referenceFileNames <- c("1wmatCase001.RData")
existRData         <- dir("tests/testthat", pattern = "\\.RData$")
notReference       <- existRData[!(existRData %in% referenceFileNames)]
notReference
referenceFileNames <- c("1wmatCase001.RData")
cleanUp <- function(referenceFileNames) {
existRData         <- dir("tests/testthat", pattern = "\\.RData$")
notReference       <- existRData[!(existRData %in% referenceFileNames)]
unlink(notReference)
}
cleanUp <- function(refFileNames) {
existRData         <- dir("tests/testthat", pattern = "\\.RData$")
notReference       <- existRData[!(existRData %in% refFileNames)]
unlink(notReference)
}
referenceFileNames <- c("1wmatCase001.RData")
cleanUp(refrenceFileNames)
cleanUp(referenceFileNames)
referenceFileNames <- c("1wmatCase001.RData")
# function cleanUp
# deletes all non-reference .RData files
cleanUp <- function(refFileNames) {
existRData         <- dir(pattern = "\\.RData$")
notReference       <- existRData[!(existRData %in% refFileNames)]
unlink(notReference)
}
# function loadNonRef
# loads the only .RData file which can exist in the tests/testhat
# directory without being a reference file
loadNonRef <- function(refFileNames) {
existRData         <- dir(pattern = "\\.RData$")
notReference       <- existRData[!(existRData %in% refFileNames)]
get(load(notReference))
}
# Test case 1:
# A rational function given as single string
testCase1 <- function(refFileNames) {
cleanUp(refFileNames)
x11(width = 4, height = 4)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4),
invertFlip = FALSE, res = 150,
deleteTempFiles = FALSE)
dev.off()
referenceWmat <- get(load("1wmatCase001.RData"))
actualWmat    <- loadNonRef(refFileNames)
cleanUp(refFileNames)
return(list(referenceWmat, actualWmat))
}
getwd()
setwd("tests/testthat")
referenceFileNames <- c("1wmatCase001.RData")
# function cleanUp
# deletes all non-reference .RData files
cleanUp <- function(refFileNames) {
existRData         <- dir(pattern = "\\.RData$")
notReference       <- existRData[!(existRData %in% refFileNames)]
unlink(notReference)
}
# function loadNonRef
# loads the only .RData file which can exist in the tests/testhat
# directory without being a reference file
loadNonRef <- function(refFileNames) {
existRData         <- dir(pattern = "\\.RData$")
notReference       <- existRData[!(existRData %in% refFileNames)]
get(load(notReference))
}
testCase1(referenceFileNames)
cleanUp(referenceFileNames)
referenceFileNames <- c("1wmatCase001.RData")
# function cleanUp
# deletes all non-reference .RData files
cleanUp <- function(refFileNames) {
existRData         <- dir(pattern = "\\.RData$")
notReference       <- existRData[!(existRData %in% refFileNames)]
unlink(notReference)
}
# function loadNonRef
# loads the only .RData file with "wmat" in its name which can exist
# in the tests/testhat directory without being a reference file
loadNonRef <- function(refFileNames) {
existRData         <- dir(pattern = "*wmat*\\.RData$")
notReference       <- existRData[!(existRData %in% refFileNames)]
get(load(notReference))
}
# Test case 1:
# A rational function given as single string
testCase1 <- function(refFileNames) {
cleanUp(refFileNames)
x11(width = 4, height = 4)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4),
invertFlip = FALSE, res = 150,
deleteTempFiles = FALSE)
dev.off()
referenceWmat <- get(load("1wmatCase001.RData"))
actualWmat    <- loadNonRef(refFileNames)
cleanUp(refFileNames)
return(list(referenceWmat, actualWmat))
}
testCase1(referenceFileNames)
dir(pattern = "*wmat*\\.RData$")
dir(pattern = "*wmat*.\\.RData$")
dir(pattern = "*wmat*.*.RData$")
cleanUp <- function(refFileNames) {
existRData         <- dir(pattern = "\\.RData$")
notReference       <- existRData[!(existRData %in% refFileNames)]
unlink(notReference)
}
# function loadNonRef
# loads the only .RData file with "wmat" in its name which can exist
# in the tests/testhat directory without being a reference file
loadNonRef <- function(refFileNames) {
existRData         <- dir(pattern = "*wmat*.*.RData$")
notReference       <- existRData[!(existRData %in% refFileNames)]
get(load(notReference))
}
testCase1(referenceFileNames)
testCase1 <- function(refFileNames) {
cleanUp(refFileNames)
x11(width = 4, height = 4)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4),
invertFlip = FALSE, res = 150,
deleteTempFiles = FALSE)
dev.off()
referenceWmat <- get(load("1wmatCase001.RData"))
actualWmat    <- loadNonRef(refFileNames)
cleanUp(refFileNames)
all.equal(referenceWmat, actualWmat))
}
testCase1 <- function(refFileNames) {
cleanUp(refFileNames)
x11(width = 4, height = 4)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4),
invertFlip = FALSE, res = 150,
deleteTempFiles = FALSE)
dev.off()
referenceWmat <- get(load("1wmatCase001.RData"))
actualWmat    <- loadNonRef(refFileNames)
cleanUp(refFileNames)
all.equal(referenceWmat, actualWmat)
}
testCase1(referenceFileNames)
?rm
?test_that
?testthat::test_that
?testthat::test_that
devtools::load_all(".")
library(viscomplexr)
tempDir <- "tests/testthat"
x11(width = 4, height = 4)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = TRUE,
tempDir = tempDir, deleteTempFiles = FALSE)
dev.off()
empDir <- "tests/testthat"
x11(width = 4, height = 4)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = TRUE,
tempDir = tempDir, deleteTempFiles = FALSE)
dev.off()
tempDir <- "tests/testthat"
x11(width = 4, height = 4)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = TRUE,
tempDir = tempDir, deleteTempFiles = FALSE)
dev.off()
jacobiTheta <- function(z, tau = 1i, nIter = 30) {
k <- c(1:nIter)
q <- exp(pi*1i*tau)
g <- exp(2*pi*1i*z)
return(1 + sum(q^(k^2)*g^k + q^(k^2)*(1/g)^k))
}
tempDir <- "tests/testthat"
x11(width = 4, height = 4)
phasePortrait("jacobiTheta",
xlim = c(-2, 2), ylim = c(-2, 2), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE)
dev.off()
devtools::load_all(".")
library(viscomplexr)
jacobiTheta <- function(z, tau = 1i, nIter = 30) {
k <- c(1:nIter)
q <- exp(pi*1i*tau)
g <- exp(2*pi*1i*z)
return(1 + sum(q^(k^2)*g^k + q^(k^2)*(1/g)^k))
}
tempDir <- "tests/testthat"
x11(width = 4, height = 4)
phasePortrait("jacobiTheta", moreArgs = list(tau = 1i/2 - 1/4, nIter = 30),
xlim = c(-2, 2), ylim = c(-2, 2), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE)
dev.off()
devtools::load_all(".")
library(viscomplexr)
library(viscomplexr)
?phasePortrait
tempDir <- "tests/testthat"
x11(width = 4, height = 4)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE)
dev.off()
devtools::load_all(".")
library(viscomplexr)
tempDir <- "tests/testthat"
x11(width = 4, height = 4)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = TRUE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE)
dev.off()
library(viscomplexr)
tempDir <- "tests/testthat"
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = TRUE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE)
jacobiTheta <- function(z, tau = 1i, nIter = 30) {
k <- c(1:nIter)
q <- exp(pi*1i*tau)
g <- exp(2*pi*1i*z)
return(1 + sum(q^(k^2)*g^k + q^(k^2)*(1/g)^k))
}
tempDir <- "tests/testthat"
phasePortrait("jacobiTheta",
xlim = c(-2, 2), ylim = c(-2, 2), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE)
tempDir <- "tests/testthat"
x11(width = 4, height = 4)
phasePortrait("jacobiTheta", moreArgs = list(tau = 1i/2 - 1/4, nIter = 30),
xlim = c(-2, 2), ylim = c(-2, 2), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE)
tempDir <- "tests/testthat"
phasePortrait("jacobiTheta", moreArgs = list(tau = 1i/2 - 1/4, nIter = 30),
xlim = c(-2, 2), ylim = c(-2, 2), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE)
devtools::load_all(".")
library(viscomplexr)
library(viscomplexr)
library(viscomplexr)
foreach::registerDoSEQ()
library(viscomplexr)
library(viscomplexr)
?%do%
?'%do%'
?`%do%`
?foreach::%do%
?foreach::`%do%`
library(viscomplexr)
tempDir <- "tests/testthat"
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE)
tempDir <- "tests/testthat"
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = TRUE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE)
jacobiTheta <- function(z, tau = 1i, nIter = 30) {
k <- c(1:nIter)
q <- exp(pi*1i*tau)
g <- exp(2*pi*1i*z)
return(1 + sum(q^(k^2)*g^k + q^(k^2)*(1/g)^k))
}
tempDir <- "tests/testthat"
phasePortrait("jacobiTheta",
xlim = c(-2, 2), ylim = c(-2, 2), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE)
tempDir <- "tests/testthat"
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE, nCores = 1)
tempDir <- "tests/testthat"
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = TRUE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE, nCores = 1)
jacobiTheta <- function(z, tau = 1i, nIter = 30) {
k <- c(1:nIter)
q <- exp(pi*1i*tau)
g <- exp(2*pi*1i*z)
return(1 + sum(q^(k^2)*g^k + q^(k^2)*(1/g)^k))
}
tempDir <- "tests/testthat"
phasePortrait("jacobiTheta",
xlim = c(-2, 2), ylim = c(-2, 2), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE, nCores = 1)
tempDir <- "tests/testthat"
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE)
tempDir <- "tests/testthat"
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4), invertFlip = TRUE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE)
jacobiTheta <- function(z, tau = 1i, nIter = 30) {
k <- c(1:nIter)
q <- exp(pi*1i*tau)
g <- exp(2*pi*1i*z)
return(1 + sum(q^(k^2)*g^k + q^(k^2)*(1/g)^k))
}
tempDir <- "tests/testthat"
phasePortrait("jacobiTheta",
xlim = c(-2, 2), ylim = c(-2, 2), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE)
tempDir <- "tests/testthat"
phasePortrait("jacobiTheta", moreArgs = list(tau = 1i/2 - 1/4, nIter = 30),
xlim = c(-2, 2), ylim = c(-2, 2), invertFlip = FALSE,
tempDir = tempDir, deleteTempFiles = FALSE,
noScreenDevice = TRUE)
library(viscomplexr)
foreach::registerDoSEQ()
library(viscomplexr)
library(viscomplexr)
library(viscomplexr)
library(viscomplexr)
# Ubuntu
setwd("/media/peter/Rindskanoppel/Peter/Projekte/viscomplexr/Peter")
tempDir <- "/media/peter/Rindskanoppel/temp/VisComplexFiles"
# Ubuntu
setwd("/media/peter/Rindskanoppel/Peter/Projekte/viscomplexr/Peter")
getwd()
# Ubuntu
tempDir <- "/media/peter/Rindskanoppel/temp/VisComplexFiles"
x11(width = 8, height = 8)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-4, 4), ylim = c(-4, 4),
invertFlip = FALSE, res = 150)
x11(width = 8, height = 8)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-6, 6), ylim = c(-6, 6),
invertFlip = FALSE, res = 150)
x11(width = 16, height = 8)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2),
invertFlip = FALSE, res = 150)
riemannMask()
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2),
invertFlip = TRUE, res = 150)
riemannMask()
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2),
invertFlip = FALSE, res = 150)
riemannMask()
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2),
invertFlip = TRUE, res = 150)
riemannMask()
par(op)
x11(width = 8, height = 8)
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-6, 6), ylim = c(-6, 6),
invertFlip = FALSE, res = 150)
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2),
invertFlip = FALSE, res = 150)
riemannMask()
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2),
invertFlip = TRUE, res = 150)
riemannMask()
par(op)
devtools::load_all(".")
library(viscomplexr)
?phasePortrait
devtools::load_all(".")
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2),
invertFlip = FALSE, res = 150)
riemannMask()
phasePortrait("(2-z)^2*(-1i+z)^3*(4-3i-z)/((2+2i+z)^4)",
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2),
invertFlip = TRUE, res = 150)
riemannMask()
par(op)
library(viscomplexr)
phasePortrait("z", xlim = c(-8, 8), ylim = c(-8, 8))
phasePortrait("z", xlim = c(-8.2, 8.2), ylim = c(-8.2, 8.2),
xlab = "real", ylab = "imaginary")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(viscomplexr)
phasePortrait("z", xlim = c(-8.2, 8.2), ylim = c(-8.2, 8.2),
xlab = "real", ylab = "imaginary")
?phasePortrait
devtools::load_all(".")
?phasePortrait
library(viscomplexr)
?phasePortrait
