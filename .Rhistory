xlab = "real", ylab = "imaginary")
)
# Variante 2 - Mischung aus String und moreArgs
x11(width = 8, height = 8)
system.time(
phasePortrait("prod(abs(a)/a * (a-z)/(1-Conj(a)*z))",
moreArgs = list(a = a),
pType = "p",
xlim = c(-1.7, 1.7), ylim = c(-1.7, 1.7), tempDir = tempDir,
xlab = "real", ylab = "imaginary")
)
# Variante 3 - Funktion au√üerhalb definieren
x11(width = 8, height = 8)
blaschke <- function(z, a) prod(abs(a)/a * (a-z)/(1-Conj(a)*z))
system.time(
phasePortrait(blaschke,
moreArgs = list(a = a),
pType = "p",
xlim = c(-1.7, 1.7), ylim = c(-1.7, 1.7), tempDir = tempDir,
xlab = "real", ylab = "imaginary")
)
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
res <- 150
phasePortrait("(z - 1)/((-1/2 - z)^2*(z - 1i)^2)",
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2),
res = res)
riemannMask()
phasePortrait("(z - 1)/((-1/2 - z)^2*(z - 1i)^2)",
xlim = c(-1.2, 1.2), ylim = c(-1.2, 1.2),
invertFlip = TRUE, res = res)
riemannMask()
par(op)
?match.fun
library(viscomplexr)
?phasePortrait
library(viscomplexr)
?phasePortrait
library(viscomplexr)
?phasePortrait
library(viscomplexr)
?phasePortrait
library(viscomplexr)
?phasePortrait
library(viscomplexr)
?phasePortrait
?match.fun
library(viscomplexr)
?match.fun
?phasePortrait
?match.fun
library(viscomplexr)
?phasePortrait
library(viscomplexr)
?phasePortrait
library(viscomplexr)
?phasePortrait
library(viscomplexr)
?phasePortrait
library(pracma)
x11(width = sqrt(2)*8, height = 8); res <- 150
# res <- 300; png("pracmaz.png", width = sqrt(2)*8,
#                 height = 8, units = "in", res = res)
phasePortrait("zeta(z)", xlim = c(-35, 35), res = res,
ylim = c(-20, 20), tempDir = tempDir)
phasePortrait(zeta, xlim = c(-35, 35), res = res,
ylim = c(-20, 20), tempDir = tempDir)
phasePortrait(pracma::zeta, xlim = c(-35, 35), res = res,
ylim = c(-20, 20), tempDir = tempDir)
x11(width = sqrt(2)*6, height = 6)
phasePortrait(pracma::zeta, xlim = c(-35, 35), res = res,
ylim = c(-20, 20), tempDir = tempDir)
sqrt(2)*6
x11(width = 8.5, height = 6)
phasePortrait(pracma::zeta, xlim = c(-35, 35), res = res,
ylim = c(-20, 20), tempDir = tempDir)
x11(width = 8.5, height = 6)
phasePortrait(pracma::gamma, xlim = c(-35, 35), res = res,
ylim = c(-20, 20), tempDir = tempDir)
x11(width = 8.5, height = 6)
phasePortrait(pracma::gammaz, xlim = c(-35, 35), res = res,
ylim = c(-20, 20), tempDir = tempDir)
x11(width = 8, height = 8)
phasePortrait(pracma::gammaz, xlim = c(-10, 10), res = res,
ylim = c(-10, 10), tempDir = tempDir)
x11(width = 8, height = 8)
phasePortrait(pracma::zeta, xlim = c(-30, 10), res = res,
ylim = c(-20, 20), tempDir = tempDir)
x11(width = 8, height = 8)
phasePortrait(pracma::zeta, xlim = c(-40, 10), res = res,
ylim = c(-25, 25), tempDir = tempDir)
# gamma auch noch
x11(width = 8, height = 8)
phasePortrait(pracma::gammaz, xlim = c(-10, 10), res = res,
ylim = c(-10, 10), tempDir = tempDir)
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
phasePortrait(zeta, xlim = c(-35, 15), res = res,
ylim = c(-25, 25), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(zeta(z))
phasePortrait(gammaz, xlim = c(-10, 10), res = res,
ylim = c(-10, 10), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(gamma(z))
par(op)
library(pracma)
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
phasePortrait(zeta, xlim = c(-35, 15), res = res,
ylim = c(-25, 25), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(zeta(z))
phasePortrait(gammaz, xlim = c(-10, 10), res = res,
ylim = c(-10, 10), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(gamma(z))
par(op)
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
phasePortrait(zeta, xlim = c(-35, 15), res = res,
ylim = c(-25, 25), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(zeta(z)))
phasePortrait(gammaz, xlim = c(-10, 10), res = res,
ylim = c(-10, 10), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(gamma(z)))
par(op)
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
phasePortrait(zeta, xlim = c(-35, 15), res = res,
ylim = c(-25, 25), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(zeta(z)))
phasePortrait(gammaz, xlim = c(-10, 10), res = res,
ylim = c(-10, 10), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(Gamma(z)))
par(op)
gamma(12+3i)
gammaz(12+3i)
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
phasePortrait(zeta, xlim = c(-35, 15), res = res,
ylim = c(-25, 25), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(zeta(z)))
phasePortrait(gammaz, xlim = c(-10, 10), res = res,
ylim = c(-10, 10), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(Gamma(z)))
par(op)
zeta(12+3i)
detach(pracma)
detach("pracma")
detach('pracma')
detach('package:pracma')
zeta(1.2+3i)
library(pracma)
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
phasePortrait(zeta, xlim = c(-35, 15), res = res,
ylim = c(-25, 25), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(zeta(z)))
phasePortrait(gammaz, xlim = c(-10, 10), res = res,
ylim = c(-10, 10), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(Gamma(z)))
par(op)
gamma(1+1i)
gamma(1)
library(viscomplexr)
gamma(1+1i)
?phasePortrait
library(viscomplexr)
?phasePortrait
library(pracma)
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
phasePortrait(zeta, xlim = c(-35, 15), res = res,
ylim = c(-25, 25), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(zeta(z)))
phasePortrait(gammaz, xlim = c(-10, 10), res = res,
ylim = c(-10, 10), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(Gamma(z)))
par(op)
library(pracma)
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
phasePortrait(zeta, xlim = c(-35, 15), res = res,
ylim = c(-25, 25), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(zeta(z)),
cex.main = 1.5)
phasePortrait(gammaz, xlim = c(-10, 10), res = res,
ylim = c(-10, 10), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(Gamma(z)),
cex.main = 1.5)
par(op)
library(viscomplexr)
?phasePortrait
library(pracma)
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
phasePortrait(zeta, xlim = c(-35, 15), res = res,
ylim = c(-25, 25), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(zeta(z)),
cex.main = 2)
phasePortrait(gammaz, xlim = c(-10, 10), res = res,
ylim = c(-10, 10), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(Gamma(z)),
cex.main = 2)
par(op)
beta(z)
betaz
beta
beta(1+1i)
beta(1+1i,12)
?complex
library(viscomplexr)
?phasePortrait
blaschke <- function(z, a) prod(abs(a)/a * (a-z)/(1-Conj(a)*z))
# define 200 random numbers inside the unit circle
n <- 200
a <- complex(modulus = runif(n), argument = runif(n)*2*pi)
x11(width = 10, height = 8)
phasePortrait(blaschke,
moreArgs = list(a = a),
pType = "p",
xlim = c(-1.7, 1.7), ylim = c(-1.7, 1.7), tempDir = tempDir,
xlab = "real", ylab = "imaginary")
library(viscomplexr)
?phasePortrait
library(pracma)
x11(width = 16, height = 8)
op <- par(mfrow = c(1, 2))
phasePortrait(zeta, xlim = c(-35, 15), res = res,
ylim = c(-25, 25), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(zeta(z)),
cex.main = 2)
phasePortrait(gammaz, xlim = c(-10, 10), res = res,
ylim = c(-10, 10), tempDir = tempDir,
xlab = "real", ylab = "imaginary",
main = expression(Gamma(z)),
cex.main = 2)
par(op)
blaschke <- function(z, a) prod(abs(a)/a * (a-z)/(1-Conj(a)*z))
# define 200 random numbers inside the unit circle
n <- 200
a <- complex(modulus = runif(n), argument = runif(n)*2*pi)
# Plot it
x11(width = 10, height = 8)
phasePortrait(blaschke,
moreArgs = list(a = a),
pType = "p",
xlim = c(-1.7, 1.7), ylim = c(-2, 2), tempDir = tempDir,
xlab = "real", ylab = "imaginary")
library(viscomplexr)
?phasePortrait
blaschke <- function(z, a) prod(abs(a)/a * (a-z)/(1-Conj(a)*z))
# define 200 random numbers inside the unit circle
n <- 200
a <- complex(modulus = runif(n), argument = runif(n)*2*pi)
# Plot it
x11(width = 10, height = 8)
phasePortrait(blaschke,
moreArgs = list(a = a),
pType = "p",
xlim = c(-2, 2), ylim = c(-1.7, 1.7), tempDir = tempDir,
xlab = "real", ylab = "imaginary")
library(viscomplexr)
?phasePortrait
blaschke <- function(z, a) prod(abs(a)/a * (a-z)/(1-Conj(a)*z))
# define 200 random numbers inside the unit circle
n <- 200
a <- complex(modulus = runif(n), argument = runif(n)*2*pi)
# Plot it
x11(width = 10, height = 8)
phasePortrait(blaschke,
moreArgs = list(a = a),
pType = "p",
xlim = c(-2.5, 2.5), ylim = c(-1.7, 1.7), tempDir = tempDir,
xlab = "real", ylab = "imaginary")
library(viscomplexr)
?phasePortrait
source('/media/peter/Rindskanoppel/Peter/Projekte/viscomplexr/R/VisComplex.R')
library(viscomplexr)
?phasePortrait
# define function for calculating blaschke products
blaschke <- function(z, a) prod(abs(a)/a * (a-z)/(1-Conj(a)*z))
# define 200 random numbers inside the unit circle
n <- 200
a <- complex(modulus = runif(n), argument = runif(n)*2*pi)
# Plot it
x11(width = 10, height = 8)
phasePortrait(blaschke,
moreArgs = list(a = a),
pType = "p",
xlim = c(-2.5, 2.5), ylim = c(-1.7, 1.7), tempDir = tempDir,
xlab = "real", ylab = "imaginary")
library(viscomplexr)
# define function for calculating blaschke products
blaschke <- function(z, a) prod(abs(a)/a * (a-z)/(1-Conj(a)*z))
# define 200 random numbers inside the unit circle
n <- 200
a <- complex(modulus = runif(n), argument = runif(n)*2*pi)
# Plot it
x11(width = 10, height = 8)
phasePortrait(blaschke,
moreArgs = list(a = a),
pType = "p",
xlim = c(-2.5, 2.5), ylim = c(-1.7, 1.7), tempDir = tempDir,
xlab = "real", ylab = "imaginary")
devtools::load_all(".")
library(viscomplexr)
phasePortrait
?phasePortrait
blaschke <- function(z, a) prod(abs(a)/a * (a-z)/(1-Conj(a)*z))
# define 200 random numbers inside the unit circle
n <- 200
a <- complex(modulus = runif(n), argument = runif(n)*2*pi)
# Plot it
x11(width = 10, height = 8)
phasePortrait(blaschke,
moreArgs = list(a = a),
pType = "p",
xlim = c(-2.5, 2.5), ylim = c(-1.7, 1.7), tempDir = tempDir,
xlab = "real", ylab = "imaginary")
library(viscomplexr)
blaschke <- function(z, a) prod(abs(a)/a * (a-z)/(1-Conj(a)*z))
# define 200 random numbers inside the unit circle
n <- 200
a <- complex(modulus = runif(n), argument = runif(n)*2*pi)
# Plot it
x11(width = 10, height = 8)
phasePortrait(blaschke,
moreArgs = list(a = a),
pType = "p",
xlim = c(-2.5, 2.5), ylim = c(-1.7, 1.7), tempDir = tempDir,
xlab = "real", ylab = "imaginary")
blaschke <- function(z, a) prod(abs(a)/a * (a-z)/(1-Conj(a)*z))
# define 200 random numbers inside the unit circle
n <- 200
a <- complex(modulus = runif(n), argument = runif(n)*2*pi)
# Plot it
x11(width = 10, height = 8)
phasePortrait(blaschke,
moreArgs = list(a = a),
pType = "p",
xlim = c(-2.5, 2.5), ylim = c(-1.7, 1.7),
xlab = "real", ylab = "imaginary")
## End(Not run)
mandelbrot
library(viscomplexr)
?phasePortrait
x11(width = 12, height = 8)
# iteration depth
n <- 52
# Mandelbrot function
mandelbrot <- function(z, n) {
c  <- z
zz <- 0
for(i in c(1:n)) zz <- zz^2 + c
}
# plot it
phasePortrait(mandelbrot, xlim = c(-2, 1), ylim = c(-1, 1),
pType = "pma")
library(viscomplexr)
?phasePortrait
x11(width = 12, height = 8)
# iteration depth
n <- 52
# Mandelbrot function
mandelbrot <- function(z, n) {
c  <- z
zz <- 0
for(i in c(1:n)) zz <- zz^2 + c
}
# plot it
phasePortrait(mandelbrot, moreArgs(n = n),
xlim = c(-2, 1), ylim = c(-1, 1),
pType = "pma")
library(viscomplexr)
?phasePortrait
x11(width = 12, height = 8)
# iteration depth
n <- 52
# Mandelbrot function
mandelbrot <- function(z, n) {
c  <- z
zz <- 0
for(i in c(1:n)) zz <- zz^2 + c
}
# plot it
phasePortrait(mandelbrot, moreArgs = list(n = n),
xlim = c(-2, 1), ylim = c(-1, 1),
pType = "pma")
library(viscomplexr)
?phasePortrait
x11(width = 12, height = 8)
# iteration depth
n <- 52
# Mandelbrot function
mandelbrot <- function(z, n) {
c  <- z
zz <- 0
for(i in c(1:n)) zz <- zz^2 + c
zz
}
# plot it
phasePortrait(mandelbrot, moreArgs = list(n = n),
xlim = c(-2, 1), ylim = c(-1, 1),
pType = "pma")
library(viscomplexr)
?phasePortrait
x11(width = 12, height = 8)
op <- par(mar = c(0, 0, 0, 0), bg = "black")
# iteration depth
itDepth <- 52
# Mandelbrot function
mandelbrot <- function(z, n) {
c  <- z
zz <- 0
for(i in c(1:n)) zz <- zz^2 + c
zz
}
# plot it
phasePortrait(mandelbrot, moreArgs = list(n = itDepth),
xlim = c(-2, 1), ylim = c(-1, 1), axes = FALSE,
pType = "pma", hsv.nan = c(0, 0, 0))
par(op)
library(viscomplexr)
?phasePortrait
x11(width = 12, height = 8)
op <- par(mar = c(0, 0, 0, 0), bg = "black")
# iteration depth
itDepth <- 52
# Mandelbrot function
mandelbrot <- function(z, n) {
c  <- z
zz <- 0
for(i in c(1:n)) zz <- zz^2 + c
zz
}
# plot it
phasePortrait(mandelbrot, moreArgs = list(n = itDepth),
xlim = c(-2, 1), ylim = c(-1, 1), axes = FALSE,
pType = "pma", hsvNaN = c(0, 0, 0))
par(op)
library(viscomplexr)
?phasePortrait
ls()
rm(list = ls())
ls()
itDepth <- 52
# Mandelbrot function
mandelbrot <- function(z, n) {
c  <- z
zz <- 0
for(i in c(1:n)) zz <- zz^2 + c
zz
}
# plot it
x11(width = 12, height = 8)
op <- par(mar = c(0, 0, 0, 0), bg = "black")
phasePortrait(mandelbrot, moreArgs = list(n = itDepth),
xlim = c(-2, 1), ylim = c(-1, 1), axes = FALSE,
pType = "pma", hsvNaN = c(0, 0, 0))
par(op)
?mapply
prime
library(viscomplexr)
?phasePortrait
n <- 73
a <- complex(modulus = runif(n), argument = runif(n)*2*pi)
x11(width = 10, height = 8)
phasePortrait("prod(abs(a)/a * (a-z)/(1-Conj(a)*z)",
moreArgs = list(a = a),
pType = "p",
xlim = c(-2.5, 2.5), ylim = c(-1.7, 1.7),
xlab = "real", ylab = "imaginary")
library(viscomplexr)
?phasePortrait
n <- 73
a <- complex(modulus = runif(n), argument = runif(n)*2*pi)
x11(width = 10, height = 8)
phasePortrait("prod(abs(a)/a * (a-z)/(1-Conj(a)*z))",
moreArgs = list(a = a),
pType = "p",
xlim = c(-2.5, 2.5), ylim = c(-1.7, 1.7),
xlab = "real", ylab = "imaginary")
library(viscomplexr)
?phasePortrait
x11(width = 9, height = 9)
op <- par(mfrow = c(2, 2), mar = c(2.1, 2.1, 2.1, 2.1))
phasePortrait("sin(z)", xlim = c(-pi, pi), ylim = c(-pi, pi),
pType = "p",   main = "pType = 'p'",   axes = FALSE)
phasePortrait("sin(z)", xlim = c(-pi, pi), ylim = c(-pi, pi),
pType = "pm",  main = "pType = 'pm'",  axes = FALSE)
phasePortrait("sin",    xlim = c(-pi, pi), ylim = c(-pi, pi),
pType = "pa",  main = "pType = 'pa'",  axes = FALSE)
phasePortrait(sin,      xlim = c(-pi, pi), ylim = c(-pi, pi),
pType = "pma", main = "pType = 'pma'", axes = FALSE)
par(op)
